{"version":3,"sources":["FirebaseConfig.js","firestore/RetroStore.js","components/Retro/ItemRetroDialog.js","components/Retro/ItemRetro.js","components/Retro/Retro.js","Theme.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore_RetroStore","callback","collection","onSnapshot","snapshot","docs","map","doc","id","data","item","add","update","ItemRetroDialog","this","setState","props","_this","react_default","a","createElement","index_es","open","onClose","handleClose","aria-labelledby","autoFocus","margin","label","type","variant","value","state","PlanoDeAcao","onChange","e","Object","objectSpread","target","fullWidth","Responsavel","aria-label","name","Status","control","onClick","onSave","color","React","Component","ItemRetro","editarItem","_this2","_this$props","classes","padding","style","fontSize","fontWeight","className","align","size","Edit_default","Retro_ItemRetroDialog","RetroStore","atualizarItemRetro","withStyles","theme","Pendente","backgroundColor","Concluído","Andamento","Retro","criarItem","items","listarItemRetro","retroItens","_this3","position","container","alignItems","spacing","xs","width","src","alt","flexGrow","card","Retro_ItemRetro","fab","Add_default","salvarItemRetro","unit","bottom","right","createMuiTheme","palette","primary","main","secondary","error","typography","fontFamily","useNextVariants","App","styles","Theme","components_Retro_Retro","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4193ed4.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyB-w8iE7xqj75I81tFEMugg5UqUWYdQkVs',\r\n  authDomain: 'gestao-a-vista-curingas.firebaseapp.com',\r\n  databaseURL: 'https://gestao-a-vista-curingas.firebaseio.com',\r\n  projectId: 'gestao-a-vista-curingas',\r\n  storageBucket: 'gestao-a-vista-curingas.appspot.com',\r\n  messagingSenderId: '580279756020',\r\n  appId: '1:580279756020:web:1c7017f50ecb8d79'\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = firebase.firestore();\r\n","import { db } from './../FirebaseConfig';\r\n\r\nclass RetroStore {\r\n  listarItemRetro(callback) {\r\n    db.collection('retro').onSnapshot(snapshot => {\r\n      callback(\r\n        snapshot.docs.map(doc => {\r\n          return { id: doc.id, data: doc.data() };\r\n        })\r\n      );\r\n    });\r\n  }\r\n\r\n  salvarItemRetro(item) {\r\n    db.collection('retro').add(item.data);\r\n  }\r\n\r\n  atualizarItemRetro(item) {\r\n    db.collection('retro')\r\n      .doc(item.id)\r\n      .update(item.data);\r\n  }\r\n}\r\n\r\nexport default new RetroStore();\r\n","import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  TextField,\r\n  Radio,\r\n  Button,\r\n  RadioGroup,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\n\r\nclass ItemRetroDialog extends React.Component {\r\n  componentWillMount() {\r\n    this.setState({ item: this.props.item });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog open={this.props.open} onClose={this.props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"normal\"\r\n            id=\"planodeacao\"\r\n            label=\"Plano de Acao\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            value={this.state.item.data.PlanoDeAcao}\r\n            onChange={e => {\r\n              this.setState({\r\n                item: { ...this.state.item, data: { ...this.state.item.data, PlanoDeAcao: e.target.value } }\r\n              });\r\n            }}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            id=\"responsavel\"\r\n            label=\"Responsável\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            value={this.state.item.data.Responsavel}\r\n            onChange={e => {\r\n              this.setState({\r\n                item: { ...this.state.item, data: { ...this.state.item.data, Responsavel: e.target.value } }\r\n              });\r\n            }}\r\n          />\r\n          <RadioGroup\r\n            aria-label=\"Status\"\r\n            name=\"status\"\r\n            value={this.state.item.data.Status}\r\n            onChange={e => {\r\n              this.setState({\r\n                item: { ...this.state.item, data: { ...this.state.item.data, Status: e.target.value } }\r\n              });\r\n            }}\r\n          >\r\n            <FormControlLabel value=\"Pendente\" control={<Radio />} label=\"Pendente\" />\r\n            <FormControlLabel value=\"Andamento\" control={<Radio />} label=\"Andamento\" />\r\n            <FormControlLabel value=\"Concluído\" control={<Radio />} label=\"Concluído\" />\r\n          </RadioGroup>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => this.props.onSave(this.state.item)} color=\"primary\">\r\n            Salvar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemRetroDialog;\r\n","import React from 'react';\r\nimport { TableRow, TableCell, Typography, IconButton, withStyles } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport RetroStore from '../../firestore/RetroStore';\r\nimport ItemRetroDialog from './ItemRetroDialog';\r\n\r\nconst styles = theme => ({\r\n  Pendente: {\r\n    backgroundColor: '#e95d6a'\r\n  },\r\n  Concluído: {\r\n    backgroundColor: '#57bb8a'\r\n  },\r\n  Andamento: {\r\n    backgroundColor: '#6fa8dc'\r\n  }\r\n});\r\n\r\nclass ItemRetro extends React.Component {\r\n  state = {\r\n    editarItem: false\r\n  };\r\n  render() {\r\n    const { item, classes } = this.props;\r\n    return (\r\n      <TableRow>\r\n        <TableCell padding=\"none\">\r\n          <Typography style={{ fontSize: 40, fontWeight: 600 }}>\r\n            {item.data && item.data.PlanoDeAcao}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell padding=\"none\">\r\n          <Typography style={{ fontSize: 20, fontWeight: 600 }}>\r\n            {item.data && item.data.Responsavel}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell className={classes[item.data && item.data.Status]} align=\"center\" padding=\"none\">\r\n          <Typography align=\"center\" style={{ fontSize: 20, fontWeight: 400, color: '#ffffff' }}>\r\n            {item.data && item.data.Status}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell padding=\"none\">\r\n          <IconButton\r\n            size=\"small\"\r\n            // color=\"secondary\"\r\n            onClick={() => {\r\n              this.setState({ editarItem: true });\r\n            }}\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n        </TableCell>\r\n        <ItemRetroDialog\r\n          open={this.state.editarItem}\r\n          item={item}\r\n          onSave={item => {\r\n            RetroStore.atualizarItemRetro(item);\r\n            this.setState({ editarItem: false });\r\n          }}\r\n          handleClose={() => {\r\n            this.setState({ editarItem: false });\r\n          }}\r\n        />\r\n      </TableRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ItemRetro);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Fab,\r\n  Card,\r\n  AppBar,\r\n  Toolbar,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ItemRetro from './ItemRetro';\r\nimport ItemRetroDialog from './ItemRetroDialog';\r\nimport RetroStore from '../../firestore/RetroStore';\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    margin: theme.spacing.unit * 2,\r\n    padding: theme.spacing.unit * 2\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing.unit * 2,\r\n    right: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass Retro extends React.Component {\r\n  state = {\r\n    criarItem: false,\r\n    items: []\r\n  };\r\n\r\n  componentWillMount() {\r\n    RetroStore.listarItemRetro(retroItens => {\r\n      this.setState({\r\n        items: retroItens\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <AppBar position=\"static\" color=\"primary\">\r\n          <Toolbar>\r\n            <Grid container alignItems=\"center\" spacing={16} style={{ padding: 16 }}>\r\n              <Grid item xs={1}>\r\n                <img width={80} src=\"./images/curingas_branca.png\" alt=\"curingas\" />\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <Typography align=\"center\" variant=\"display2\" color=\"inherit\" style={{ flexGrow: 1 }}>\r\n                  Retro\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                <img width={80} src=\"./images/curingas_branca.png\" alt=\"curingas\" />\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Card className={classes.card}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"left\">Plano de Ação</TableCell>\r\n                <TableCell align=\"left\">Responsável</TableCell>\r\n                <TableCell align=\"center\">Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.items.map(item => (\r\n                <ItemRetro item={item} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Card>\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"Add\"\r\n          className={classes.fab}\r\n          onClick={() => {\r\n            this.setState({ criarItem: true });\r\n          }}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n        <ItemRetroDialog\r\n          open={this.state.criarItem}\r\n          item={{ id: '', data: { PlanoDeAcao: '', Responsavel: '', Status: 'Pendente' } }}\r\n          onSave={item => {\r\n            RetroStore.salvarItemRetro(item);\r\n            this.setState({ criarItem: false });\r\n          }}\r\n          handleClose={() => {\r\n            this.setState({ criarItem: false });\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Retro);\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#504d94'\r\n    },\r\n    secondary: {\r\n      main: '#22b5c3'\r\n    },\r\n    error: {\r\n      main: '#e72372'\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Montserrat\"',\r\n    useNextVariants: true\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { MuiThemeProvider } from '@material-ui/core';\r\nimport Retro from './components/Retro/Retro';\r\nimport Theme from './Theme';\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider theme={Theme}>\r\n      <Retro />\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}