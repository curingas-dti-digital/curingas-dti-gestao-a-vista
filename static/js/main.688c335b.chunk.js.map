{"version":3,"sources":["Theme.js","components/Retro/ItemRetro.js","components/Retro/ItemRetroDialog.js","FirebaseConfig.js","firestore/RetroStore.js","components/Retro/Retro.js","App.js","serviceWorker.js","index.js"],"names":["createMuiTheme","pallete","primary","main","secondary","error","useNextVariants","ItemRetro","_this$props","this","props","item","classes","react_default","a","createElement","index_es","variant","PlanoDeAcao","Data","Responsavel","className","Status","React","Component","withStyles","theme","Pendente","backgroundColor","Concluído","Andamento","ItemRetroDialog","setState","_this","open","onClose","handleClose","aria-labelledby","id","autoFocus","margin","label","type","onChange","e","Object","objectSpread","state","target","value","fullWidth","aria-label","name","control","onClick","onSave","color","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore_RetroStore","callback","firestore","collection","onSnapshot","snapshot","itens","forEach","doc","push","data","add","Retro","criarItem","items","_this2","RetroStore","listarItemRetro","retroItens","_this3","table","map","Retro_ItemRetro","fab","Add_default","Retro_ItemRetroDialog","salvarItem","padding","spacing","unit","position","bottom","right","App","styles","Theme","components_Retro_Retro","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.688c335b.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport default createMuiTheme({\r\n  pallete: {\r\n    primary: {\r\n      main: '#504d9b'\r\n    },\r\n    secondary: {\r\n      main: '#22b5c3'\r\n    },\r\n    error: {\r\n      main: '#e72372'\r\n    }\r\n  },\r\n  useNextVariants: true\r\n});\r\n","import React from 'react';\r\nimport { TableRow, TableCell, Typography, withStyles } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  Pendente: {\r\n    backgroundColor: '#e95d6a'\r\n  },\r\n  Concluído: {\r\n    backgroundColor: '#57bb8a'\r\n  },\r\n  Andamento: {\r\n    backgroundColor: '#6fa8dc'\r\n  }\r\n});\r\n\r\nclass ItemRetro extends React.Component {\r\n  render() {\r\n    const { item, classes } = this.props;\r\n    return (\r\n      <TableRow>\r\n        <TableCell>\r\n          <Typography variant=\"display2\">{item.PlanoDeAcao}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography variant=\"body2\">{item.Data}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography variant=\"body2\">{item.Responsavel}</Typography>\r\n        </TableCell>\r\n        <TableCell className={classes[item.Status]}>\r\n          <Typography variant=\"body2\">{item.Status}</Typography>\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ItemRetro);\r\n","import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  TextField,\r\n  Radio,\r\n  Button,\r\n  RadioGroup,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\n\r\nclass ItemRetroDialog extends React.Component {\r\n  componentWillMount() {\r\n    this.setState({ item: this.props.item });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog open={this.props.open} onClose={this.props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"normal\"\r\n            id=\"planodeacao\"\r\n            label=\"Plano de Acao\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            onChange={e => {\r\n              this.setState({ item: { ...this.state.item, PlanoDeAcao: e.target.value } });\r\n            }}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            id=\"responsavel\"\r\n            label=\"Responsável\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            onChange={e => {\r\n              this.setState({ item: { ...this.state.item, Responsavel: e.target.value } });\r\n            }}\r\n          />\r\n          <RadioGroup\r\n            aria-label=\"Status\"\r\n            name=\"status\"\r\n            value={this.state.item.Status}\r\n            onChange={e => {\r\n              this.setState({ item: { ...this.state.item, Status: e.target.value } });\r\n            }}\r\n          >\r\n            <FormControlLabel value=\"Pendente\" control={<Radio />} label=\"Pendente\" />\r\n            <FormControlLabel value=\"Em Andamento\" control={<Radio />} label=\"Em Andamento\" />\r\n            <FormControlLabel value=\"Concluído\" control={<Radio />} label=\"Concluído\" />\r\n          </RadioGroup>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => this.props.onSave(this.state.item)} color=\"primary\">\r\n            Salvar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemRetroDialog;\r\n","import firebase from 'firebase';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyB-w8iE7xqj75I81tFEMugg5UqUWYdQkVs',\r\n  authDomain: 'gestao-a-vista-curingas.firebaseapp.com',\r\n  databaseURL: 'https://gestao-a-vista-curingas.firebaseio.com',\r\n  projectId: 'gestao-a-vista-curingas',\r\n  storageBucket: 'gestao-a-vista-curingas.appspot.com',\r\n  messagingSenderId: '580279756020',\r\n  appId: '1:580279756020:web:1c7017f50ecb8d79'\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import firebase from './../FirebaseConfig';\r\n\r\nclass RetroStore {\r\n  listarItemRetro(callback) {\r\n    const db = firebase.firestore();\r\n    db.collection('retro').onSnapshot(snapshot => {\r\n      let itens = [];\r\n      snapshot.forEach(doc => {\r\n        itens.push(doc.data());\r\n      });\r\n      callback(itens);\r\n    });\r\n  }\r\n\r\n  salvarItem(item) {\r\n    const db = firebase.firestore();\r\n    db.collection('retro').add(item);\r\n  }\r\n}\r\n\r\nexport default new RetroStore();\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Paper as div,\r\n  Typography,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Fab\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ItemRetro from './ItemRetro';\r\nimport ItemRetroDialog from './ItemRetroDialog';\r\nimport RetroStore from '../../firestore/RetroStore';\r\n\r\nconst styles = theme => ({\r\n  table: {\r\n    padding: theme.spacing.unit * 2\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing.unit * 2,\r\n    right: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass Retro extends React.Component {\r\n  state = {\r\n    criarItem: false,\r\n    items: [\r\n      {\r\n        PlanoDeAcao: '',\r\n        Data: '',\r\n        Responsavel: '',\r\n        Status: ''\r\n      }\r\n    ]\r\n  };\r\n\r\n  componentWillMount() {\r\n    RetroStore.listarItemRetro(retroItens => {\r\n      this.setState({\r\n        items: retroItens\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h1\" color=\"primary\">\r\n          Retro\r\n        </Typography>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Plano de Ação</TableCell>\r\n              <TableCell>Data</TableCell>\r\n              <TableCell>Responsável</TableCell>\r\n              <TableCell>Status</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.state.items.map(item => (\r\n              <ItemRetro item={item} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"Add\"\r\n          className={classes.fab}\r\n          onClick={() => {\r\n            this.setState({ criarItem: true });\r\n          }}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n        <ItemRetroDialog\r\n          open={this.state.criarItem}\r\n          item={{ PlanoDeAcao: '', Responsavel: '', Status: 'Pendente' }}\r\n          onSave={item => {\r\n            RetroStore.salvarItem(item);\r\n            this.setState({ criarItem: false });\r\n          }}\r\n          handleClose={() => {\r\n            this.setState({ criarItem: false });\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Retro);\r\n","import React from 'react';\n// import Eventos from './components/Eventos';\nimport Theme from './Theme';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport Retro from './components/Retro/Retro';\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={Theme}>\n      <div className=\"App\">\n        <Retro />\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}